// regard needle3 as middle one, move the front n-1 plantes from needle1 to needle2;
// move plante n from needle1 to needle3;
// regard needle1 as middle one, move the front n-1 plantes from needle2 to needle3; 
// total times of removing is 2^n-1;
void moveDisks(int count , int needle1, int needle3, int needle2)
{
	if  (count>0)
	{
		moveDisks(count-1, needle1,needle2,needle3);
		cout<<"Move Disk  "<<count<<" from "<<needle1<<" to "<<needle3<<endl;
		moveDisks(count-1, needle2, needle3,needle1);
	}
}

// note : when recursive（递归）, cost more time and memory than iteration（迭代）, for the reason that recursive build many 
// temparory variables in function life.
